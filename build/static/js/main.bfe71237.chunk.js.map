{"version":3,"sources":["../node_modules/kepler.gl/dist/localization sync /^/.*$","component/navbar/navbar.jsx","component/login.jsx","component/dashboard/dashboardcomponent.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","Typography","variant","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","useState","username","setusername","password","setpassword","remember","setremember","users","setUsers","history","useHistory","Container","component","maxWidth","CssBaseline","Avatar","onSubmit","preventDefault","Axios","post","email","then","response","push","catch","error","getAllUsers","get","data","TextField","required","fullWidth","label","name","autoComplete","onChange","console","log","target","value","autoFocus","type","FormControlLabel","control","CheckBox","checked","Button","Grid","container","item","xs","Link","href","element","Box","customizedKeplerGlReducer","keplerGLReducer","initialState","uiState","readOnly","centerMap","reducers","combineReducers","keplerGl","store","createStore","applyMiddleware","taskMiddleware","Maps","dispatch","useDispatch","setsavedDatasets","setsavedConfig","info","datasets","configs","option","mapToLoad","setmapToLoad","setsavedInfos","getData","a","require","options","mapData","KeplerGlSchema","load","config","mapDataOpt","setDispatch","addDataToMap","useEffect","style","height","mapboxApiAccessToken","process","Dashboard","iframesrc","setiframesrc","lg","md","sm","src","App","path","exact","render","props","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bfe71237.chunk.js","sourcesContent":["var map = {\n\t\"./\": 339,\n\t\"./ca\": 646,\n\t\"./ca.js\": 646,\n\t\"./en\": 448,\n\t\"./en.js\": 448,\n\t\"./es\": 647,\n\t\"./es.js\": 647,\n\t\"./fi\": 648,\n\t\"./fi.js\": 648,\n\t\"./index\": 339,\n\t\"./index.js\": 339,\n\t\"./locales\": 156,\n\t\"./locales.js\": 156,\n\t\"./pt\": 649,\n\t\"./pt.js\": 649\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1074;","import React from 'react'\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nconst Navbar = () =>{\r\n    const classes = useStyles();\r\n    return(\r\n<AppBar position=\"static\">\r\n  <Toolbar>\r\n    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n      <MenuIcon  />\r\n    </IconButton>\r\n    <Typography variant=\"h6\" className={classes.title}>\r\n     IA Assignment\r\n    </Typography>\r\n  </Toolbar>\r\n</AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\nimport { Button, Typography, FormControlLabel, Link, Box } from \"@material-ui/core\"\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CheckBox } from \"@material-ui/icons\";\r\nimport {useHistory} from 'react-router';\r\nimport Axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n\r\n  const [username, setusername] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [remember, setremember] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const usernameHandler = (e)=> {\r\n\r\n    console.log(e.target.value);\r\n    setusername(e.target.value);\r\n  }\r\n\r\n  const passwordHandler = (e)=>{\r\n    \r\n    console.log(e.target.value);\r\n      setpassword(e.target.value)\r\n  }\r\n\r\n  const getAllUsers = ()=> {\r\n    Axios.get('/api/users/all').then((response)=>{\r\n      setUsers(response.data.users)\r\n    }).catch((error)=> \r\n    {\r\n      getAllUsers();\r\n    })\r\n  }\r\n\r\n  const loginHandler= (e)=>{\r\n\r\n    e.preventDefault();\r\n    Axios.post('/api/users/login',{users:{email:username, password:password}}).then((response)=>{\r\n      history.push(\"/Dashboard\")  \r\n    }).catch((error)=> \r\n    {\r\n      getAllUsers();\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n          </Typography>\r\n        <form className={classes.form} onSubmit={loginHandler} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            onChange={usernameHandler}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={passwordHandler}\r\n          />\r\n          <FormControlLabel\r\n            control={<CheckBox value=\"remember\" color=\"secondary\" checked={remember} onChange={()=>setremember(true)} />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n            </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\" color='inherit'>\r\n                Forgot password?\r\n                </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\" color='inherit'>\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        {\r\n          users && users.map((element)=>(\r\n            <Typography component='div'>\r\n              <Box>\r\n                use the following users: \r\n                username:{element.email}\r\n                Password:{element.password}\r\n              </Box>\r\n            </Typography>\r\n          ))\r\n        }\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport keplerGLReducer from \"kepler.gl/reducers\";\r\nimport { Provider, useDispatch } from 'react-redux';\r\nimport KeplerGl from 'kepler.gl';\r\nimport { taskMiddleware } from 'react-palm/tasks';\r\nimport { addDataToMap } from 'kepler.gl/actions';\r\nimport KeplerGlSchema from 'kepler.gl/schemas';\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst customizedKeplerGlReducer = keplerGLReducer.initialState({\r\n  uiState: { readOnly: true, centerMap: true }\r\n});\r\n\r\nconst reducers = combineReducers({\r\n  keplerGl: customizedKeplerGlReducer\r\n})\r\nconst store = createStore(reducers, {}, applyMiddleware(taskMiddleware));\r\n\r\nfunction Maps() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [savedDatasets, setsavedDatasets] = useState();\r\n  const [savedConfig, setsavedConfig] = useState();\r\n\r\n  const [mapToLoad, setmapToLoad] = useState({\r\n    info: \"\", datasets: [], configs: {}, option: {\r\n      centerMap: true,\r\n      readOnly: true,\r\n    }\r\n  });\r\n  const [savedInfos, setsavedInfos] = useState();\r\n\r\n  const sampleConfig = {\r\n    visState: {\r\n      filters: [\r\n        {\r\n          id: 'me',\r\n          dataId: 'state_population',\r\n          name: 'population',\r\n          type: 'number',\r\n          enlarged: true\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n\r\n    const data = require(\"../../keplergl2.json\");\r\n    const options = {\r\n      centerMap: true,\r\n      readOnly: true,\r\n    }\r\n\r\n    const mapData = KeplerGlSchema.load(data.datasets, data.config)\r\n    setsavedDatasets(data.datasets);\r\n    setsavedConfig(data.config);\r\n    setsavedInfos(data.info);\r\n    const mapDataOpt = { ...mapData, option: options, info: data.info }\r\n    setmapToLoad(mapDataOpt);\r\n  };\r\n\r\n  const setDispatch = async () => {\r\n    dispatch(\r\n      addDataToMap(mapToLoad)\r\n    )\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDispatch()\r\n  }, [dispatch, mapToLoad])\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n\r\n    <div style={{ position: \"absolute\", width: \"64.5%\", height: \"70%\", marginTop: '2%' }}>\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <KeplerGl\r\n            id='state_population'\r\n            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API}\r\n            width={width}\r\n            height={height}\r\n          />\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Dashboard = () => {\r\n  const [iframesrc, setiframesrc] = useState();\r\n\r\n  useEffect(() => {\r\n    console.log(process.env.REACT_APP_DASH_SRC)\r\n    setiframesrc(process.env.REACT_APP_DASH_SRC)\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Grid container>\r\n        <Grid item xs={12} lg={12} md={12} sm={12}>\r\n          <div style={{width:'1232px', height:'580px', position:'relative'}}>\r\n          <div style={{ position: \"absolute\", width: \"100%\", height: \"100%\", marginTop: '2%' }}>\r\n            <AutoSizer>\r\n              {({ height, width }) => (\r\n                <iframe src={iframesrc} height={height} width={width}> </iframe>\r\n              )}\r\n            </AutoSizer>\r\n          </div>\r\n          </div>\r\n        </Grid>\r\n        <br></br>\r\n        <Grid item xs={12} lg={12} md={12} sm={12}>\r\n        <Maps></Maps>\r\n          </Grid>\r\n      </Grid>\r\n    </Provider >\r\n  )\r\n}\r\n\r\n\r\nexport default Dashboard;","import React from 'react';\nimport './App.css';\nimport Navbar from './component/navbar/navbar';\nimport { Container } from '@material-ui/core';\nimport Login from './component/login';\nimport { Route, Switch } from 'react-router-dom';\nimport Dashboard from './component/dashboard/dashboardcomponent';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <section>\n        <Navbar />\n      </section>\n      <Container>\n      <Switch>\n          <Route path=\"/\" exact render={(props) => <Login {...props} ></Login>} />\n          <Route path=\"/Login\" render={(props) => <Login {...props} ></Login>} />\n          <Route path='/Dashboard' render={() => <Dashboard />} />\n        </Switch>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render( \n<React.StrictMode >\n    <Router>\n    <App />\n    </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}